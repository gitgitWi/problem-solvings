/**
 * Climbing the Leaderboard
 * @see https://www.hackerrank.com/challenges/climbing-the-leaderboard/problem
 */
function climbingLeaderboard(ranked: number[], player: number[]): number[] {
  const { floor } = Math;
  ranked = Array.from(new Set(ranked.concat(ranked[0] + 1))).sort(
    (a, b) => b - a
  );
  const rankedSize = ranked.length;

  // 이진탐색
  const findRank = (score: number): number => {
    if (score >= ranked[0]) return 1;
    if (score < ranked[rankedSize - 1]) return rankedSize;

    let left = 0;
    let right = rankedSize - 1;
    let cur = 0;

    while (left < right) {
      cur = floor((left + right) / 2);
      const curVal = ranked[cur];
      if (score === curVal) return cur;
      if (score > curVal) right = cur;
      else left = cur + 1;
    }

    return score > ranked[cur] ? cur : cur + 1;
  };

  return player.map(findRank);
}

(
  [
    [
      [
        [100, 100, 50, 40, 40, 20, 10],
        [5, 25, 50, 120],
      ],
      [6, 4, 2, 1],
    ],
    [
      [
        [100, 90, 90, 80, 75, 60],
        [50, 65, 77, 90, 102],
      ],
      [6, 5, 4, 2, 1],
    ],
    [
      [
        [
          998, 995, 995, 991, 989, 989, 984, 979, 968, 964, 955, 955, 947, 945,
          942, 934, 933, 930, 928, 927, 918, 916, 905, 900, 898, 895, 895, 895,
          892, 887, 882, 881, 878, 876, 872, 872, 858, 856, 846, 844, 839, 823,
          808, 806, 804, 800, 799, 794, 793, 789, 784, 772, 766, 765, 764, 762,
          762, 759, 757, 751, 747, 745, 738, 725, 720, 708, 706, 703, 699, 697,
          693, 691, 690, 685, 682, 677, 662, 661, 656, 648, 642, 641, 640, 634,
          632, 625, 623, 618, 618, 617, 601, 601, 600, 591, 585, 583, 578, 552,
          550, 550, 546, 543, 539, 509, 505, 503, 503, 494, 486, 474, 472, 472,
          472, 468, 467, 464, 439, 438, 434, 434, 427, 421, 420, 405, 399, 395,
          392, 388, 386, 384, 377, 374, 368, 356, 350, 344, 342, 341, 337, 331,
          298, 296, 296, 294, 290, 260, 259, 248, 245, 244, 244, 233, 228, 215,
          211, 210, 206, 202, 201, 189, 186, 181, 178, 168, 163, 162, 161, 159,
          151, 147, 143, 142, 142, 141, 139, 132, 130, 128, 125, 125, 120, 112,
          111, 95, 92, 91, 88, 81, 69, 66, 63, 48, 44, 20, 18, 17, 14, 8, 1, 1,
        ],
        [
          18, 31, 38, 126, 152, 170, 198, 199, 202, 243, 369, 376, 376, 408,
          560, 572, 614, 665, 666, 942,
        ],
      ],
      [
        177, 176, 176, 162, 153, 148, 144, 144, 142, 136, 119, 118, 118, 110,
        89, 89, 83, 70, 70, 12,
      ],
    ],
    [
      [
        [
          295, 294, 291, 287, 287, 285, 285, 284, 283, 279, 277, 274, 274, 271,
          270, 268, 268, 268, 264, 260, 259, 258, 257, 255, 252, 250, 244, 241,
          240, 237, 236, 236, 231, 227, 227, 227, 226, 225, 224, 223, 216, 212,
          200, 197, 196, 194, 193, 189, 188, 187, 183, 182, 178, 177, 173, 171,
          169, 165, 143, 140, 137, 135, 133, 130, 130, 130, 128, 127, 122, 120,
          116, 114, 113, 109, 106, 103, 99, 92, 85, 81, 69, 68, 63, 63, 63, 61,
          57, 51, 47, 46, 38, 30, 28, 25, 22, 15, 14, 12, 6, 4,
        ],
        [
          5, 5, 6, 14, 19, 20, 23, 25, 29, 29, 30, 30, 32, 37, 38, 38, 38, 41,
          41, 44, 45, 45, 47, 59, 59, 62, 63, 65, 67, 69, 70, 72, 72, 76, 79,
          82, 83, 90, 91, 92, 93, 98, 98, 100, 100, 102, 103, 105, 106, 107,
          109, 112, 115, 118, 118, 121, 122, 122, 123, 125, 125, 125, 127, 128,
          131, 131, 133, 134, 139, 140, 141, 143, 144, 144, 144, 144, 147, 150,
          152, 155, 156, 160, 164, 164, 165, 165, 166, 168, 169, 170, 171, 172,
          173, 174, 174, 180, 184, 187, 187, 188, 194, 197, 197, 197, 198, 201,
          202, 202, 207, 208, 211, 212, 212, 214, 217, 219, 219, 220, 220, 223,
          225, 227, 228, 229, 229, 233, 235, 235, 236, 242, 242, 245, 246, 252,
          253, 253, 257, 257, 260, 261, 266, 266, 268, 269, 271, 271, 275, 276,
          281, 282, 283, 284, 285, 287, 289, 289, 295, 296, 298, 300, 300, 301,
          304, 306, 308, 309, 310, 316, 318, 318, 324, 326, 329, 329, 329, 330,
          330, 332, 337, 337, 341, 341, 349, 351, 351, 354, 356, 357, 366, 369,
          377, 379, 380, 382, 391, 391, 394, 396, 396, 400,
        ],
      ],
      [
        88, 88, 87, 85, 84, 84, 83, 82, 81, 81, 80, 80, 80, 80, 79, 79, 79, 79,
        79, 79, 79, 79, 77, 75, 75, 74, 73, 73, 73, 71, 71, 71, 71, 71, 71, 70,
        70, 69, 69, 68, 68, 68, 68, 67, 67, 67, 66, 66, 65, 65, 64, 64, 62, 61,
        61, 60, 59, 59, 59, 59, 59, 59, 58, 57, 56, 56, 55, 55, 53, 52, 52, 51,
        51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 50, 50, 50, 50, 49, 49,
        48, 48, 47, 47, 47, 45, 43, 42, 42, 41, 38, 36, 36, 36, 36, 35, 35, 35,
        35, 35, 35, 34, 34, 34, 33, 33, 33, 33, 33, 32, 30, 28, 28, 28, 28, 27,
        27, 27, 26, 23, 23, 22, 22, 20, 20, 20, 18, 18, 15, 15, 14, 14, 13, 13,
        11, 11, 10, 10, 8, 8, 7, 6, 5, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1,
      ],
    ],
  ] as [number[][], number[]][]
).forEach(([[ranked, player], a]) => {
  const ans = climbingLeaderboard(ranked, player);
  console.log(ans.slice().reverse());
  console.log(JSON.stringify(ans) === JSON.stringify(a));

  for (let i = ans.length; i-- > 0; ) {
    if (ans[i] !== a[i]) console.log({ ans: ans[i], a: a[i] });
  }
});
